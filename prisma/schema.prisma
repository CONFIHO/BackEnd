generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model rol {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(30)
  user user[]
}

model budget {
  id                            Int              @id
  consumer_id                   Int
  admin_id                      Int
  consumer_nickname             String?          @db.VarChar(30)
  admin_nickname                String?          @db.VarChar(30)
  create_at                     DateTime         @default(now()) @db.DateTime(0)
  user_budget_admin_idTouser    user             @relation("budget_admin_idTouser", fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "budget_admin_id_fk")
  user_budget_consumer_idTouser user             @relation("budget_consumer_idTouser", fields: [consumer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "budget_consumer_id_fk")
  budget_history                budget_history[]

  @@index([admin_id], map: "budget_admin_id_fk")
  @@index([consumer_id], map: "budget_consumer_id_fk")
}

model budget_history {
  id                  Int       @id @default(autoincrement())
  start_date          DateTime  @db.Date
  end_date            DateTime  @db.Date
  value               Float     @db.Float
  current_consumption Float?    @default(0.00) @db.Float
  budget_id           Int
  budget              budget    @relation(fields: [budget_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "budget_history_budget_id_fk")
  expense             expense[]

  @@index([budget_id], map: "budget_history_budget_id_fk")
}

model expense {
  id               Int              @id @default(autoincrement())
  description      String           @db.Text
  value            Float            @db.Float
  file_name        String           @db.VarChar(50)
  fileData         Bytes            @db.Blob
  expense_date     DateTime         @db.Date
  category_id      Int
  budget_id        Int
  budget_history   budget_history   @relation(fields: [budget_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "expense_budget_history_id_fk")
  expense_category expense_category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "expense_expense_category_id_fk")

  @@index([budget_id], map: "expense_budget_history_id_fk")
  @@index([category_id], map: "expense_expense_category_id_fk")
}

model expense_category {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar(30)
  expense expense[]
}

model user {
  id                              Int      @id @default(autoincrement())
  name                            String   @db.VarChar(30)
  email                           String   @db.VarChar(50)
  password                        String   @db.VarChar(15)
  code                            String?  @db.VarChar(20)
  rol_id                          Int
  budget_budget_admin_idTouser    budget[] @relation("budget_admin_idTouser")
  budget_budget_consumer_idTouser budget[] @relation("budget_consumer_idTouser")
  rol                             rol      @relation(fields: [rol_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_rol_id_fk")

  @@index([rol_id], map: "user_rol_id_fk")
}
